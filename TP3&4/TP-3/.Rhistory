knitr::opts_chunk$set(echo = FALSE)
library(xts)
library(hornpa)
library(lubridate)
library(xtable)
library(PerformanceAnalytics)
library(TTR)
library(lubridate)
library(roll)
library(Hmisc)
library(nFactors)
library(kableExtra)
#library(broom)
library(quadprog)
library(ggplot2)
monthly.ret.file <- "./monthly.ret.rda"
load(monthly.ret.file)
index(monthly.ret) <- floor_date(index(monthly.ret), "month")
kable(cov(monthly.ret), booktabs=T) %>%
kable_styling(latex_options=c("scale_down", "HOLD_position"))
kable(t(colMeans(monthly.ret)), booktabs=T,
caption="Rendement moyen mensuel") %>%
kable_styling(latex_options=c("scale_down","HOLD_position"))
tmp <- read.csv("DP_LIVE_01032020211755676.csv", header=TRUE, sep=";")[, c("TIME", "Value")]
dt <- ymd(paste(tmp$TIME, "-01", sep=""))
rf_rate <- xts((tmp$Value/100.0)/12, dt)
colnames(rf_rate) <- "Rf"
monthly.ret.2 <- merge.xts(monthly.ret, rf_rate, join="inner")
plot(rf_rate)
starting.month <- 1 #dim(monthly.ret.2)[1]-24
ending.month <- dim(monthly.ret.2)[1]
monthly.ret.3 <- monthly.ret.2[starting.month:ending.month,]
names <- colnames(monthly.ret.3)
df <- data.frame(setNames(rep(list(NA), length(names)), names))
refrence_ret <- monthly.ret.3$SPY - monthly.ret.3$Rf
for (i in 1:dim(monthly.ret.3)[2]){
current_values <- monthly.ret.3[,i] - monthly.ret.3$Rf
linear_model <- lm(current_values ~ refrence_ret)
df[1:2,i] <- linear_model$coefficients
}
row.names(df) <- c("alpha", "beta")
kable(df, booktabs=T, caption="Alpha and beta by asset") %>%
kable_styling(latex_options=c("scale_down","HOLD_position"))
df2<-as.data.frame(x=t(df[2,]))
coef_dir <- colMeans(monthly.ret.3$SPY) - colMeans(monthly.ret.3$Rf)
df2$y <- t(df[1,])+ coef_dir*t(df[2,])
names(df2)[1] <- "x"
asset_line <- lm(df2$y ~ df2$x)
plot(df2$x,df2$y,bty="no", pch=1, col="black", xlab=expression(beta),
ylab=expression(E(r)))
abline(a=asset_line$coefficients[1], b=asset_line$coefficients[2], col="red")
for(i in seq_along(names)) {
text(df2$x[i], df2$y[i], names[i], cex=1.2, col="blue")
}
assets <- c("MSFT", "HD", "XOM")
df3<-data.frame(row.names = assets)
for (asset in assets){
residual.sigma <- sqrt(sd(monthly.ret.3[,asset])^2 - (df[2,][asset]*sd(monthly.ret.3$SPY))^2)
alpha <- df[1,][asset]
df3[asset,"weight"] = alpha/(residual.sigma^2)
df3[asset,"specific risk²"] = residual.sigma^2
}
normalizer <- sum(df3$weight)
df3$weight_n <- df3$weight / normalizer
df3t <- df3
df3t[,"beta"] = t(df[2,assets])
df3t[,"alpha"] = t(df[1,assets])
kbl(t(df3t)[-1,], booktabs=T, caption="weight by asset") %>%
kable_styling(latex_options="HOLD_position")
active_port_ret <- sum(colMeans(monthly.ret.3[,assets])*t(df3$weight_n))
excess_ret <- active_port_ret - colMeans(monthly.ret.3$Rf)
monthly_ret.active <- apply(monthly.ret.3[,assets], 1, weighted.mean, df3$weight)
ret_spread <- monthly_ret.active - monthly.ret.3$Rf
alpha_active <- sum(df3$weight_n*df[1,assets])
beta_active <- sum(df3$weight_n*df[2,assets])
sigma_active_residual <- sum((df3$weight_n^2)*df3[assets,"specific risk²"])
sigma_active <- sd(monthly_ret.active)
print(paste("The excess return is : ", round(excess_ret*100,2), "%"))
print(paste("The Active Portfolio Alpha is : ", round(alpha_active,2)))
print(paste("The Active Portfolio Beta is : ", round(beta_active,2)))
print(paste("The Active Portfolio standard deviation is : ", round(sigma_active*100,2),"%"))
print(paste("The Active Portfolio residual variance is : ", round(sigma_active_residual^2,11)))
sigmaM <- sd(monthly.ret.3$SPY)
returnM <- colMeans(monthly.ret.3$SPY)
w_num <- alpha_active*(sigmaM^2)
w_den <- w_num*(1-beta_active)+returnM*(sigma_active_residual^2)
wA <- w_num / w_den
print(paste("Accordiding to the Treynor's Model, the active portfolio contribution is : ", toString(wA*100),"%"))
Assets <- c("AAPL", "AMZN", "MSFT", "F",  "XOM", "MMM",  "HD",   "PG",   "KO")
plot.data <- monthly.ret.3[, c(Assets, "Rf")]
for(a in Assets) {
plot.data[, a] <- plot.data[, a] - plot.data$Rf
}
res <- data.frame(Mean=apply(plot.data[, Assets],2,mean),
Sd = apply(plot.data[, Assets],2,sd))
rownames(res) <- Assets
mu <- colMeans(monthly.ret.3[,Assets]) * 12
Sigma <- cov(monthly.ret.3[,Assets]) * 12
mu.star <- seq(from=0.04, to=0.35, length.out=200)
mu.free <- mean(monthly.ret.3$Rf)
sol <- NULL
sol.with.rf<-NULL
sharpe.max <- 0
for(mu.s in mu.star) {
A.sum <- matrix(rep(1,length(mu)), ncol=1)
A.mat <- cbind(A.sum, mu, diag(length(mu)))
b <- c(1, mu.s, rep(mu.free, length(mu)))
qp <- solve.QP(2*Sigma, rep(0,length(mu)), A.mat, b, meq=2)
sharpe <- (mu.s - mu.free) / sqrt(qp$value)
if (sharpe > sharpe.max){
# tangent portfolio
w.tangent <- matrix(qp$solution / sum(qp$solution), ncol=1)
sharpe.max <- sharpe
}
tmp <- matrix(c(mu.s, sqrt(qp$value), sharpe, qp$solution), nrow=1)
if(is.null(sol)) {
sol <- tmp
} else {
sol <- rbind(sol, tmp)
}
}
for(mu.s in seq(from=0.09, to=1.2, length.out=200)){
tmp <- matrix(c(mu.s, (mu.s - mu.free)/sharpe.max , sharpe.max, (mu.s - mu.free)*w.tangent), nrow=1)
if(is.null(sol.with.rf)) {
sol.with.rf <- tmp
} else {
sol.with.rf <- rbind(sol.with.rf, tmp)
}
}
dimnames(w.tangent)<- list(Assets)
sigma.tangent <- sqrt(t(w.tangent) %*% Sigma %*% w.tangent)
colnames(sol.with.rf) <- c("mu", "stdev", "Sharpe", Assets)
colnames(sol) <- c("mu", "stdev", "Sharpe", Assets)
plot(sol[,"stdev"], sol[,"mu"], type='l', col='red', lwd=2,
xlab=expression(sigma), ylab="Excess Return",
ylim=c(0, 0.60), xlim=c(.0, 0.60),
cex.lab=1.5, bty='n', main="Frontière de marché")
lines(x = c(.0, 0.40), sharpe.max*c(.0, 0.40)+mu.free,
type='l', col='green', lwd=2)
for(i in seq_along(Assets)) {
text(sqrt(Sigma[i,i]), mu[i], Assets[i], cex=0.9, col="blue")
}
text(sqrt(0), mu.free, "Rf", cex=0.9, col="blue")
monthly.ret.other <- as.data.frame(monthly.ret.3$SPY)
colnames(monthly.ret.other) = "Market"
monthly.ret.other$Active <- monthly_ret.active
monthly.ret.other$Treynor <- wA*monthly_ret.active+(1-wA)*monthly.ret.3$SPY
other_Assets <- c("Market", "Active", "Treynor")
other_mu <- colMeans(monthly.ret.other[,other_Assets]) * 12
other_Sigma <- cov(monthly.ret.other[,other_Assets]) * 12
for(i in seq_along(other_Assets)) {
text(sqrt(other_Sigma[i,i]), other_mu[i], other_Assets[i], cex=0.9, col="black")
}
knitr::opts_chunk$set(echo = FALSE)
library(xts)
library(hornpa)
library(lubridate)
library(xtable)
library(PerformanceAnalytics)
library(TTR)
library(lubridate)
library(roll)
library(Hmisc)
library(nFactors)
library(kableExtra)
#library(broom)
library(quadprog)
library(ggplot2)
monthly.ret.file <- "./monthly.ret.rda"
load(monthly.ret.file)
index(monthly.ret) <- floor_date(index(monthly.ret), "month")
kable(cov(monthly.ret), booktabs=T) %>%
kable_styling(latex_options=c("scale_down", "HOLD_position"))
kable(t(colMeans(monthly.ret)), booktabs=T,
caption="Rendement moyen mensuel") %>%
kable_styling(latex_options=c("scale_down","HOLD_position"))
tmp <- read.csv("DP_LIVE_01032020211755676.csv", header=TRUE, sep=";")[, c("TIME", "Value")]
dt <- ymd(paste(tmp$TIME, "-01", sep=""))
rf_rate <- xts((tmp$Value/100.0)/12, dt)
colnames(rf_rate) <- "Rf"
monthly.ret.2 <- merge.xts(monthly.ret, rf_rate, join="inner")
plot(rf_rate)
starting.month <- 1 #dim(monthly.ret.2)[1]-24
ending.month <- dim(monthly.ret.2)[1]
monthly.ret.3 <- monthly.ret.2[starting.month:ending.month,]
names <- colnames(monthly.ret.3)
df <- data.frame(setNames(rep(list(NA), length(names)), names))
refrence_ret <- monthly.ret.3$SPY - monthly.ret.3$Rf
for (i in 1:dim(monthly.ret.3)[2]){
current_values <- monthly.ret.3[,i] - monthly.ret.3$Rf
linear_model <- lm(current_values ~ refrence_ret)
df[1:2,i] <- linear_model$coefficients
}
row.names(df) <- c("alpha", "beta")
kable(df, booktabs=T, caption="Alpha and beta by asset") %>%
kable_styling(latex_options=c("scale_down","HOLD_position"))
df2<-as.data.frame(x=t(df[2,]))
coef_dir <- colMeans(monthly.ret.3$SPY) - colMeans(monthly.ret.3$Rf)
df2$y <- t(df[1,])+ coef_dir*t(df[2,])
names(df2)[1] <- "x"
asset_line <- lm(df2$y ~ df2$x)
plot(df2$x,df2$y,bty="no", pch=1, col="black", xlab=expression(beta),
ylab=expression(E(r)))
abline(a=asset_line$coefficients[1], b=asset_line$coefficients[2], col="red")
for(i in seq_along(names)) {
text(df2$x[i], df2$y[i], names[i], cex=1.2, col="blue")
}
assets <- c("KO", "HD", "PG")
df3<-data.frame(row.names = assets)
for (asset in assets){
residual.sigma <- sqrt(sd(monthly.ret.3[,asset])^2 - (df[2,][asset]*sd(monthly.ret.3$SPY))^2)
alpha <- df[1,][asset]
df3[asset,"weight"] = alpha/(residual.sigma^2)
df3[asset,"specific risk²"] = residual.sigma^2
}
normalizer <- sum(df3$weight)
df3$weight_n <- df3$weight / normalizer
df3t <- df3
df3t[,"beta"] = t(df[2,assets])
df3t[,"alpha"] = t(df[1,assets])
kbl(t(df3t)[-1,], booktabs=T, caption="weight by asset") %>%
kable_styling(latex_options="HOLD_position")
active_port_ret <- sum(colMeans(monthly.ret.3[,assets])*t(df3$weight_n))
excess_ret <- active_port_ret - colMeans(monthly.ret.3$Rf)
monthly_ret.active <- apply(monthly.ret.3[,assets], 1, weighted.mean, df3$weight)
ret_spread <- monthly_ret.active - monthly.ret.3$Rf
alpha_active <- sum(df3$weight_n*df[1,assets])
beta_active <- sum(df3$weight_n*df[2,assets])
sigma_active_residual <- sum((df3$weight_n^2)*df3[assets,"specific risk²"])
sigma_active <- sd(monthly_ret.active)
print(paste("The excess return is : ", round(excess_ret*100,2), "%"))
print(paste("The Active Portfolio Alpha is : ", round(alpha_active,2)))
print(paste("The Active Portfolio Beta is : ", round(beta_active,2)))
print(paste("The Active Portfolio standard deviation is : ", round(sigma_active*100,2),"%"))
print(paste("The Active Portfolio residual variance is : ", round(sigma_active_residual^2,11)))
sigmaM <- sd(monthly.ret.3$SPY)
returnM <- colMeans(monthly.ret.3$SPY)
w_num <- alpha_active*(sigmaM^2)
w_den <- w_num*(1-beta_active)+returnM*(sigma_active_residual^2)
wA <- w_num / w_den
print(paste("Accordiding to the Treynor's Model, the active portfolio contribution is : ", toString(wA*100),"%"))
Assets <- c("AAPL", "AMZN", "MSFT", "F",  "XOM", "MMM",  "HD",   "PG",   "KO")
plot.data <- monthly.ret.3[, c(Assets, "Rf")]
for(a in Assets) {
plot.data[, a] <- plot.data[, a] - plot.data$Rf
}
res <- data.frame(Mean=apply(plot.data[, Assets],2,mean),
Sd = apply(plot.data[, Assets],2,sd))
rownames(res) <- Assets
mu <- colMeans(monthly.ret.3[,Assets]) * 12
Sigma <- cov(monthly.ret.3[,Assets]) * 12
mu.star <- seq(from=0.04, to=0.35, length.out=200)
mu.free <- mean(monthly.ret.3$Rf)
sol <- NULL
sol.with.rf<-NULL
sharpe.max <- 0
for(mu.s in mu.star) {
A.sum <- matrix(rep(1,length(mu)), ncol=1)
A.mat <- cbind(A.sum, mu, diag(length(mu)))
b <- c(1, mu.s, rep(mu.free, length(mu)))
qp <- solve.QP(2*Sigma, rep(0,length(mu)), A.mat, b, meq=2)
sharpe <- (mu.s - mu.free) / sqrt(qp$value)
if (sharpe > sharpe.max){
# tangent portfolio
w.tangent <- matrix(qp$solution / sum(qp$solution), ncol=1)
sharpe.max <- sharpe
}
tmp <- matrix(c(mu.s, sqrt(qp$value), sharpe, qp$solution), nrow=1)
if(is.null(sol)) {
sol <- tmp
} else {
sol <- rbind(sol, tmp)
}
}
for(mu.s in seq(from=0.09, to=1.2, length.out=200)){
tmp <- matrix(c(mu.s, (mu.s - mu.free)/sharpe.max , sharpe.max, (mu.s - mu.free)*w.tangent), nrow=1)
if(is.null(sol.with.rf)) {
sol.with.rf <- tmp
} else {
sol.with.rf <- rbind(sol.with.rf, tmp)
}
}
dimnames(w.tangent)<- list(Assets)
sigma.tangent <- sqrt(t(w.tangent) %*% Sigma %*% w.tangent)
colnames(sol.with.rf) <- c("mu", "stdev", "Sharpe", Assets)
colnames(sol) <- c("mu", "stdev", "Sharpe", Assets)
plot(sol[,"stdev"], sol[,"mu"], type='l', col='red', lwd=2,
xlab=expression(sigma), ylab="Excess Return",
ylim=c(0, 0.60), xlim=c(.0, 0.60),
cex.lab=1.5, bty='n', main="Frontière de marché")
lines(x = c(.0, 0.40), sharpe.max*c(.0, 0.40)+mu.free,
type='l', col='green', lwd=2)
for(i in seq_along(Assets)) {
text(sqrt(Sigma[i,i]), mu[i], Assets[i], cex=0.9, col="blue")
}
text(sqrt(0), mu.free, "Rf", cex=0.9, col="blue")
monthly.ret.other <- as.data.frame(monthly.ret.3$SPY)
colnames(monthly.ret.other) = "Market"
monthly.ret.other$Active <- monthly_ret.active
monthly.ret.other$Treynor <- wA*monthly_ret.active+(1-wA)*monthly.ret.3$SPY
other_Assets <- c("Market", "Active", "Treynor")
other_mu <- colMeans(monthly.ret.other[,other_Assets]) * 12
other_Sigma <- cov(monthly.ret.other[,other_Assets]) * 12
for(i in seq_along(other_Assets)) {
text(sqrt(other_Sigma[i,i]), other_mu[i], other_Assets[i], cex=0.9, col="black")
}
assets <- c("KO", "HD", "XOM")
df3<-data.frame(row.names = assets)
for (asset in assets){
residual.sigma <- sqrt(sd(monthly.ret.3[,asset])^2 - (df[2,][asset]*sd(monthly.ret.3$SPY))^2)
alpha <- df[1,][asset]
df3[asset,"weight"] = alpha/(residual.sigma^2)
df3[asset,"specific risk²"] = residual.sigma^2
}
normalizer <- sum(df3$weight)
df3$weight_n <- df3$weight / normalizer
df3t <- df3
df3t[,"beta"] = t(df[2,assets])
df3t[,"alpha"] = t(df[1,assets])
kbl(t(df3t)[-1,], booktabs=T, caption="weight by asset") %>%
kable_styling(latex_options="HOLD_position")
active_port_ret <- sum(colMeans(monthly.ret.3[,assets])*t(df3$weight_n))
excess_ret <- active_port_ret - colMeans(monthly.ret.3$Rf)
monthly_ret.active <- apply(monthly.ret.3[,assets], 1, weighted.mean, df3$weight)
ret_spread <- monthly_ret.active - monthly.ret.3$Rf
alpha_active <- sum(df3$weight_n*df[1,assets])
beta_active <- sum(df3$weight_n*df[2,assets])
sigma_active_residual <- sum((df3$weight_n^2)*df3[assets,"specific risk²"])
sigma_active <- sd(monthly_ret.active)
print(paste("The excess return is : ", round(excess_ret*100,2), "%"))
print(paste("The Active Portfolio Alpha is : ", round(alpha_active,2)))
print(paste("The Active Portfolio Beta is : ", round(beta_active,2)))
print(paste("The Active Portfolio standard deviation is : ", round(sigma_active*100,2),"%"))
print(paste("The Active Portfolio residual variance is : ", round(sigma_active_residual^2,11)))
sigmaM <- sd(monthly.ret.3$SPY)
returnM <- colMeans(monthly.ret.3$SPY)
w_num <- alpha_active*(sigmaM^2)
w_den <- w_num*(1-beta_active)+returnM*(sigma_active_residual^2)
wA <- w_num / w_den
print(paste("Accordiding to the Treynor's Model, the active portfolio contribution is : ", toString(wA*100),"%"))
df2<-as.data.frame(x=t(df[2,]))
coef_dir <- colMeans(monthly.ret.3$SPY) - colMeans(monthly.ret.3$Rf)
df2$y <- t(df[1,])+ coef_dir*t(df[2,])
names(df2)[1] <- "x"
asset_line <- lm(df2$y ~ df2$x)
plot(df2$x,df2$y,bty="no", pch=1, col="black", xlab=expression(beta),
ylab=expression(E(r)))
abline(a=asset_line$coefficients[1], b=asset_line$coefficients[2], col="red")
for(i in seq_along(names)) {
text(df2$x[i], df2$y[i], names[i], cex=1.2, pos=4, col="blue")
}
